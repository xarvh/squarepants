* Add test for triple quotes containing quotes

* Test lexing of triple quotes (unindent!)




* Annotate every lambda with their function name and argument number, so that we can give better errors?

* When a constructor can't be found, its type should be assumed as a new free tyvar, but its args should be dealt with normally

* TypeCheck env can keep track of the last definition name and use that when referring to errors within blocks?

* Humanize must break a type into multiple lines

* later: Compiler should be able to produce a stacktrace

* later: sp-format should recognize and preserve two main modes from the input format: a compact and an expanded one

* add test: it should be possible to write

      allTests
          >> Test.flatten
          >> List.sortBy (fn (name & code & outcome): outcome & name)
          >> List.map (fn (name & code & outcome): testOutcomeToText name code outcome)
          >> Text.join "\n"

  without parens around the `fn`s



type Array a

#
# Array.push @theArray theNewItem
#
push =
    as Array a @: a: None

#
# Array.get theArray index
#
get =
    as Array a: Int: Maybe a

#
# Array.set @theArray index newItemValue
#
set =
    as Array a @: Int: a: Bool

#
# Array.sort @theArray
#
sortBy =
    as Array a @: (a: b): None
    with b NonFunction


List.sortBy fun ls =
    as (a: b): List a: List a
    with b NonFunction

    array @= Array.fromList ls
    Array.sortBy @array fun
    Array.toList array

